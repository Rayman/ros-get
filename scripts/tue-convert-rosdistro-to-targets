#!/usr/bin/env python

from rosdep2.sources_list import SourcesListLoader
from rosdep2.lookup import RosdepLookup
from rosdep2.rospkg_loader import DEFAULT_VIEW_KEY
from rosdistro import get_index, get_index_url, get_cached_distribution
from yaml import load, dump
import os
import tue_get
from collections import OrderedDict
import yaml


data_path = os.path.join(os.path.dirname(tue_get.__file__), '..', '..', 'data', 'tue-env')
target_path = os.path.join(data_path, 'installer', 'targets')


distroname = 'tuekinetic'
index = get_index(get_index_url())
distro = get_cached_distribution(index, distroname)


class UnsortableList(list):
    def sort(self, *args, **kwargs):
        pass

class UnsortableOrderedDict(OrderedDict):
    def items(self, *args, **kwargs):
        return UnsortableList(OrderedDict.items(self, *args, **kwargs))


yaml.add_representer(UnsortableOrderedDict, yaml.representer.SafeRepresenter.represent_dict)

for package in distro.source_packages.values():
    repository = distro.repositories[package.repository_name]

    data = UnsortableOrderedDict({'type': 'ros'})
    data['source'] = UnsortableOrderedDict(repository.get_data()['source'])
    del data['source']['version']

    if package.name != package.repository_name:
        data['source']['sub-dir'] = 'omg'

    data = [data]

    tue_get.mkdir_p(os.path.join(target_path, 'ros-' + package.name))
    with open(os.path.join(target_path, 'ros-' + package.name, 'install.yaml'), 'w') as f:
        dump(data, f, default_flow_style=False)
