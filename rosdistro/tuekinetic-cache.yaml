distribution_file:
- release_platforms:
    debian: [jessie]
    fedora: ['23', '24']
    ubuntu: [wily, xenial]
  repositories:
    hmi: {source: {url: 'http://github.com/tue-robotics/hmi.git', version: master}}
    navigation: {source: {test_commits: false, test_pull_requests: true, type: git, url: 'https://github.com/tue-robotics/navigation.git', version: hydro-devel}, status: maintained}
    rgbd: {source: {url: 'http://github.com/tue-robotics/rgbd.git', version: master}}
    tue_config: {source: {url: 'http://github.com/tue-robotics/tue_config.git', version: master}}
  type: distribution
  version: 2
name: tuekinetic
release_package_xmls: {}
source_repo_package_xmls:
  hmi:
    _ref: 2812799dbbec1fe9f10c7dbff35be4efac8a0a78
    hmi: [hmi, '<?xml version="1.0" encoding="utf-8"?><package><name>hmi</name><version>0.0.0</version><description>The hmi package</description><maintainer email="ramon@todo.todo">ramon</maintainer><license>BSD</license><buildtool_depend>catkin</buildtool_depend><run_depend>hmi_msgs</run_depend><run_depend>hmi_server</run_depend><export><metapackage/></export></package>']
    hmi_msgs: [hmi_msgs, '<?xml version="1.0" encoding="utf-8"?><package><name>hmi_msgs</name><version>0.0.0</version><description>The hmi_msgs package</description><maintainer email="rayman747@hotmail.com">Ramon Wijnands</maintainer><license>BSD</license><buildtool_depend>catkin</buildtool_depend><build_depend>actionlib_msgs</build_depend><build_depend>message_generation</build_depend><run_depend>actionlib_msgs</run_depend><run_depend>message_runtime</run_depend></package>']
    hmi_server: [hmi_server, '<?xml version="1.0" encoding="utf-8"?><package><name>hmi_server</name><version>0.0.0</version><description>The hmi_server package</description><maintainer email="rayman747@hotmail.com">Ramon Wijnands</maintainer><license>BSD</license><buildtool_depend>catkin</buildtool_depend><build_depend>actionlib</build_depend><build_depend>hmi_msgs</build_depend><build_depend>rospy</build_depend><run_depend>actionlib</run_depend><run_depend>hmi_msgs</run_depend><run_depend>rospy</run_depend></package>']
  navigation:
    _ref: fa7dba58e711cb52c8efde306e9d67146c74246f
    amcl: [amcl, '<?xml version="1.0" encoding="utf-8"?><package><name>amcl</name><version>1.11.11</version><description><p>amcl is a probabilistic localization system for a robot moving in 2D. It implements the adaptive (or KLD-sampling) Monte Carlo localization approach (as described by Dieter Fox), which uses a particle filter to track the pose of a robot against a known map.</p><p>This node is derived, with thanks, from Andrew Howard''s excellent ''amcl'' Player driver.</p></description><url>http://wiki.ros.org/amcl</url><author>Brian P. Gerkey</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>LGPL</license><buildtool_depend>catkin</buildtool_depend><build_depend>dynamic_reconfigure</build_depend><build_depend>message_filters</build_depend><build_depend>nav_msgs</build_depend><build_depend>roscpp</build_depend><build_depend>rostest</build_depend><build_depend>std_srvs</build_depend><build_depend>tf</build_depend><run_depend>roscpp</run_depend><run_depend>dynamic_reconfigure</run_depend><run_depend>tf</run_depend><test_depend>map_server</test_depend><test_depend>rosbag</test_depend></package>']
    base_local_planner: [base_local_planner, '<?xml version="1.0" encoding="utf-8"?><package><name>base_local_planner</name><version>1.11.11</version><description>This package provides implementations of the Trajectory Rollout and Dynamic Window approaches to local robot navigation on a plane. Given a plan to follow and a costmap, the controller produces velocity commands to send to a mobile base. This package supports both holonomic and non-holonomic robots, any robot footprint that can be represented as a convex polygon or circle, and exposes its configuration as ROS parameters that can be set in a launch file. This package''s ROS wrapper adheres to the BaseLocalPlanner interface specified in the<a href="http://wiki.ros.org/nav_core">nav_core</a>package.</description><author>Eitan Marder-Eppstein</author><author>Eric Perko</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/base_local_planner</url><buildtool_depend version_gte="0.5.68">catkin</buildtool_depend><build_depend>cmake_modules</build_depend><build_depend>std_msgs</build_depend><build_depend>nav_msgs</build_depend><build_depend>rosconsole</build_depend><build_depend>roscpp</build_depend><build_depend>tf</build_depend><build_depend>rospy</build_depend><build_depend>pluginlib</build_depend><build_depend>costmap_2d</build_depend><build_depend>voxel_grid</build_depend><build_depend>angles</build_depend><build_depend>visualization_msgs</build_depend><build_depend>geometry_msgs</build_depend><build_depend>nav_core</build_depend><build_depend>pcl_conversions</build_depend><build_depend>pcl_ros</build_depend><build_depend>eigen</build_depend><build_depend>dynamic_reconfigure</build_depend><build_depend>message_generation</build_depend><run_depend>std_msgs</run_depend><run_depend>nav_msgs</run_depend><run_depend>rosconsole</run_depend><run_depend>roscpp</run_depend><run_depend>tf</run_depend><run_depend>rospy</run_depend><run_depend>pluginlib</run_depend><run_depend>costmap_2d</run_depend><run_depend>voxel_grid</run_depend><run_depend>angles</run_depend><run_depend>visualization_msgs</run_depend><run_depend>geometry_msgs</run_depend><run_depend>nav_core</run_depend><run_depend>pcl_ros</run_depend><run_depend>eigen</run_depend><run_depend>dynamic_reconfigure</run_depend><run_depend>message_generation</run_depend><export><nav_core plugin="${prefix}/blp_plugin.xml"/></export></package>']
    carrot_planner: [carrot_planner, '<?xml version="1.0" encoding="utf-8"?><package><name>carrot_planner</name><version>1.11.11</version><description>This planner attempts to find a legal place to put a carrot for the robot to follow. It does this by moving back along the vector between the robot and the goal point.</description><author>Eitan Marder-Eppstein</author><author>Sachin Chitta</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/carrot_planner</url><buildtool_depend>catkin</buildtool_depend><build_depend>roscpp</build_depend><build_depend>costmap_2d</build_depend><build_depend>pluginlib</build_depend><build_depend>nav_core</build_depend><build_depend>base_local_planner</build_depend><build_depend>tf</build_depend><build_depend>eigen</build_depend><run_depend>roscpp</run_depend><run_depend>costmap_2d</run_depend><run_depend>pluginlib</run_depend><run_depend>nav_core</run_depend><run_depend>base_local_planner</run_depend><run_depend>tf</run_depend><run_depend>eigen</run_depend><export><nav_core plugin="${prefix}/bgp_plugin.xml"/></export></package>']
    clear_costmap_recovery: [clear_costmap_recovery, '<?xml version="1.0" encoding="utf-8"?><package><name>clear_costmap_recovery</name><version>1.11.11</version><description>This package provides a recovery behavior for the navigation stack that attempts to clear space by reverting the costmaps used by the navigation stack to the static map outside of a given area.</description><author>Eitan Marder-Eppstein</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/clear_costmap_recovery</url><buildtool_depend>catkin</buildtool_depend><build_depend>cmake_modules</build_depend><build_depend>roscpp</build_depend><build_depend>tf</build_depend><build_depend>costmap_2d</build_depend><build_depend>nav_core</build_depend><build_depend>pluginlib</build_depend><build_depend>eigen</build_depend><run_depend>roscpp</run_depend><run_depend>tf</run_depend><run_depend>costmap_2d</run_depend><run_depend>nav_core</run_depend><run_depend>pluginlib</run_depend><run_depend>eigen</run_depend><export><nav_core plugin="${prefix}/ccr_plugin.xml"/></export></package>']
    costmap_2d: [costmap_2d, '<?xml version="1.0" encoding="utf-8"?><package><name>costmap_2d</name><version>1.11.11</version><description>This package provides an implementation of a 2D costmap that takes in sensor data from the world, builds a 2D or 3D occupancy grid of the data (depending on whether a voxel based implementation is used), and inflates costs in a 2D costmap based on the occupancy grid and a user specified inflation radius. This package also provides support for map_server based initialization of a costmap, rolling window based costmaps, and parameter based subscription to and configuration of sensor topics.</description><author>Eitan Marder-Eppstein</author><author>David V. Lu!!</author><author>Dave Hershberger</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/costmap_2d</url><buildtool_depend>catkin</buildtool_depend><build_depend>cmake_modules</build_depend><build_depend>dynamic_reconfigure</build_depend><build_depend>geometry_msgs</build_depend><build_depend>laser_geometry</build_depend><build_depend>map_msgs</build_depend><build_depend>message_filters</build_depend><build_depend>message_generation</build_depend><build_depend>nav_msgs</build_depend><build_depend>pcl_conversions</build_depend><build_depend>pcl_ros</build_depend><build_depend>pluginlib</build_depend><build_depend>roscpp</build_depend><build_depend>rostest</build_depend><build_depend>sensor_msgs</build_depend><build_depend>std_msgs</build_depend><build_depend>tf</build_depend><build_depend>visualization_msgs</build_depend><build_depend>voxel_grid</build_depend><build_depend>ed_sensor_integration</build_depend><build_depend>rgbd</build_depend><run_depend>dynamic_reconfigure</run_depend><run_depend>geometry_msgs</run_depend><run_depend>laser_geometry</run_depend><run_depend>map_msgs</run_depend><run_depend>message_filters</run_depend><run_depend>message_runtime</run_depend><run_depend>nav_msgs</run_depend><run_depend>pcl_conversions</run_depend><run_depend>pcl_ros</run_depend><run_depend>pluginlib</run_depend><run_depend>rosconsole</run_depend><run_depend>roscpp</run_depend><run_depend>rostest</run_depend><run_depend>sensor_msgs</run_depend><run_depend>std_msgs</run_depend><run_depend>tf</run_depend><run_depend>visualization_msgs</run_depend><run_depend>voxel_grid</run_depend><run_depend>ed_sensor_integration</run_depend><run_depend>rgbd</run_depend><test_depend>map_server</test_depend><test_depend>rosbag</test_depend><export><costmap_2d plugin="${prefix}/costmap_plugins.xml"/></export></package>']
    dwa_local_planner: [dwa_local_planner, '<?xml version="1.0" encoding="utf-8"?><package><name>dwa_local_planner</name><version>1.11.11</version><description>This package provides an implementation of the Dynamic Window Approach to local robot navigation on a plane. Given a global plan to follow and a costmap, the local planner produces velocity commands to send to a mobile base. This package supports any robot who''s footprint can be represented as a convex polygon or cicrle, and exposes its configuration as ROS parameters that can be set in a launch file. The parameters for this planner are also dynamically reconfigurable. This package''s ROS wrapper adheres to the BaseLocalPlanner interface specified in the<a href="http://wiki.ros.org/nav_core">nav_core</a>package.</description><author>Eitan Marder-Eppstein</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/dwa_local_planner</url><buildtool_depend>catkin</buildtool_depend><build_depend>base_local_planner</build_depend><build_depend>cmake_modules</build_depend><build_depend>costmap_2d</build_depend><build_depend>dynamic_reconfigure</build_depend><build_depend>eigen</build_depend><build_depend>nav_core</build_depend><build_depend>nav_msgs</build_depend><build_depend>pluginlib</build_depend><build_depend>pcl_conversions</build_depend><build_depend>roscpp</build_depend><build_depend>tf</build_depend><build_depend>visualization_msgs</build_depend><run_depend>base_local_planner</run_depend><run_depend>costmap_2d</run_depend><run_depend>dynamic_reconfigure</run_depend><run_depend>eigen</run_depend><run_depend>nav_core</run_depend><run_depend>nav_msgs</run_depend><run_depend>pluginlib</run_depend><run_depend>roscpp</run_depend><run_depend>tf</run_depend><run_depend>visualization_msgs</run_depend><export><nav_core plugin="${prefix}/blp_plugin.xml"/></export></package>']
    fake_localization: [fake_localization, '<?xml version="1.0" encoding="utf-8"?><package><name>fake_localization</name><version>1.11.11</version><description>A ROS node that simply forwards odometry information.</description><author>Ioan A. Sucan</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/fake_localization</url><buildtool_depend>catkin</buildtool_depend><build_depend>angles</build_depend><build_depend>roscpp</build_depend><build_depend>rosconsole</build_depend><build_depend>nav_msgs</build_depend><build_depend>geometry_msgs</build_depend><build_depend>tf</build_depend><build_depend>message_filters</build_depend><build_depend>rospy</build_depend><run_depend>roscpp</run_depend><run_depend>rosconsole</run_depend><run_depend>nav_msgs</run_depend><run_depend>geometry_msgs</run_depend><run_depend>tf</run_depend><run_depend>message_filters</run_depend><run_depend>rospy</run_depend></package>']
    global_planner: [global_planner, '<?xml version="1.0" encoding="utf-8"?><package><name>global_planner</name><version>1.11.11</version><description>A path planner library and node.</description><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><author>David Lu!!</author><url>http://wiki.ros.org/global_planner</url><buildtool_depend>catkin</buildtool_depend><build_depend>costmap_2d</build_depend><build_depend>dynamic_reconfigure</build_depend><build_depend>geometry_msgs</build_depend><build_depend>nav_core</build_depend><build_depend>nav_msgs</build_depend><build_depend>navfn</build_depend><build_depend>pluginlib</build_depend><build_depend>roscpp</build_depend><build_depend>tf</build_depend><run_depend>costmap_2d</run_depend><run_depend>dynamic_reconfigure</run_depend><run_depend>geometry_msgs</run_depend><run_depend>nav_core</run_depend><run_depend>nav_msgs</run_depend><run_depend>navfn</run_depend><run_depend>pluginlib</run_depend><run_depend>roscpp</run_depend><run_depend>tf</run_depend><export><nav_core plugin="${prefix}/bgp_plugin.xml"/></export></package>']
    map_server: [map_server, '<?xml version="1.0" encoding="utf-8"?><package><name>map_server</name><version>1.11.11</version><description>map_server provides the<tt>map_server</tt>ROS<a href="http://www.ros.org/wiki/Nodes">Node</a>, which offers map data as a ROS<a href="http://www.ros.org/wiki/Services">Service</a>. It also provides the<tt>map_saver</tt>command-line utility, which allows dynamically generated maps to be saved to file.</description><author>Brian Gerkey, Tony Pratkanis</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><url>http://wiki.ros.org/map_server</url><license>BSD</license><buildtool_depend version_gte="0.5.68">catkin</buildtool_depend><build_depend>nav_msgs</build_depend><build_depend>roscpp</build_depend><build_depend>rostest</build_depend><build_depend>sdl-image</build_depend><build_depend>tf</build_depend><build_depend>yaml-cpp</build_depend><run_depend>nav_msgs</run_depend><run_depend>roscpp</run_depend><run_depend>rostest</run_depend><run_depend>sdl-image</run_depend><run_depend>tf</run_depend><run_depend>yaml-cpp</run_depend><test_depend>rospy</test_depend></package>']
    move_base: [move_base, '<?xml version="1.0" encoding="utf-8"?><package><name>move_base</name><version>1.11.11</version><description>The move_base package provides an implementation of an action (see the<a href="http://www.ros.org/wiki/actionlib">actionlib</a>package) that, given a goal in the world, will attempt to reach it with a mobile base. The move_base node links together a global and local planner to accomplish its global navigation task. It supports any global planner adhering to the nav_core::BaseGlobalPlanner interface specified in the<a href="http://www.ros.org/wiki/nav_core">nav_core</a>package and any local planner adhering to the nav_core::BaseLocalPlanner interface specified in the<a href="http://www.ros.org/wiki/nav_core">nav_core</a>package. The move_base node also maintains two costmaps, one for the global planner, and one for a local planner (see the<a href="http://www.ros.org/wiki/costmap_2d">costmap_2d</a>package) that are used to accomplish navigation tasks.</description><author>Eitan Marder-Eppstein</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/move_base</url><buildtool_depend>catkin</buildtool_depend><build_depend>actionlib</build_depend><build_depend>cmake_modules</build_depend><build_depend>costmap_2d</build_depend><build_depend>dynamic_reconfigure</build_depend><build_depend>geometry_msgs</build_depend><build_depend>message_generation</build_depend><build_depend>move_base_msgs</build_depend><build_depend>nav_core</build_depend><build_depend>nav_msgs</build_depend><build_depend>pluginlib</build_depend><build_depend>roscpp</build_depend><build_depend>rospy</build_depend><build_depend>std_msgs</build_depend><build_depend>std_srvs</build_depend><build_depend>tf</build_depend><build_depend>visualization_msgs</build_depend><build_depend>base_local_planner</build_depend><build_depend>clear_costmap_recovery</build_depend><build_depend>navfn</build_depend><build_depend>rotate_recovery</build_depend><run_depend>base_local_planner</run_depend><run_depend>clear_costmap_recovery</run_depend><run_depend>navfn</run_depend><run_depend>rotate_recovery</run_depend><run_depend>actionlib</run_depend><run_depend>costmap_2d</run_depend><run_depend>dynamic_reconfigure</run_depend><run_depend>geometry_msgs</run_depend><run_depend>message_runtime</run_depend><run_depend>move_base_msgs</run_depend><run_depend>nav_core</run_depend><run_depend>nav_msgs</run_depend><run_depend>pluginlib</run_depend><run_depend>roscpp</run_depend><run_depend>rospy</run_depend><run_depend>std_msgs</run_depend><run_depend>std_srvs</run_depend><run_depend>tf</run_depend><run_depend>visualization_msgs</run_depend></package>']
    move_base_msgs: [move_base_msgs, '<?xml version="1.0" encoding="utf-8"?><package><name>move_base_msgs</name><version>1.11.11</version><description>Holds the action description and relevant messages for the move_base package</description><author>Eitan Marder-Eppstein</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/move_base_msgs</url><buildtool_depend>catkin</buildtool_depend><build_depend>roscpp</build_depend><build_depend>actionlib_msgs</build_depend><build_depend>geometry_msgs</build_depend><build_depend>message_generation</build_depend><run_depend>roscpp</run_depend><run_depend>actionlib_msgs</run_depend><run_depend>geometry_msgs</run_depend><run_depend>message_runtime</run_depend></package>']
    move_slow_and_clear: [move_slow_and_clear, '<?xml version="1.0" encoding="utf-8"?><package><name>move_slow_and_clear</name><version>1.11.11</version><description>move_slow_and_clear</description><author>Eitan Marder-Eppstein</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/move_slow_and_clear</url><buildtool_depend>catkin</buildtool_depend><build_depend>cmake_modules</build_depend><build_depend>roscpp</build_depend><build_depend>nav_core</build_depend><build_depend>costmap_2d</build_depend><build_depend>geometry_msgs</build_depend><build_depend>pluginlib</build_depend><build_depend>pluginlib</build_depend><run_depend>roscpp</run_depend><run_depend>nav_core</run_depend><run_depend>costmap_2d</run_depend><run_depend>geometry_msgs</run_depend><run_depend>pluginlib</run_depend><run_depend>pluginlib</run_depend><export><nav_core plugin="${prefix}/recovery_plugin.xml"/></export></package>']
    nav_core: [nav_core, '<?xml version="1.0" encoding="utf-8"?><package><name>nav_core</name><version>1.11.11</version><description>This package provides common interfaces for navigation specific robot actions. Currently, this package provides the BaseGlobalPlanner, BaseLocalPlanner, and RecoveryBehavior interfaces, which can be used to build actions that can easily swap their planner, local controller, or recovery behavior for new versions adhering to the same interface.</description><author>Eitan Marder-Eppstein</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/nav_core</url><buildtool_depend>catkin</buildtool_depend><build_depend>std_msgs</build_depend><build_depend>geometry_msgs</build_depend><build_depend>costmap_2d</build_depend><build_depend>tf</build_depend><run_depend>std_msgs</run_depend><run_depend>geometry_msgs</run_depend><run_depend>costmap_2d</run_depend><run_depend>tf</run_depend></package>']
    navfn: [navfn, '<?xml version="1.0" encoding="utf-8"?><package><name>navfn</name><version>1.11.11</version><description>navfn provides a fast interpolated navigation function that can be used to create plans for a mobile base. The planner assumes a circular robot and operates on a costmap to find a minimum cost plan from a start point to an end point in a grid. The navigation function is computed with Dijkstra''s algorithm, but support for an A* heuristic may also be added in the near future. navfn also provides a ROS wrapper for the navfn planner that adheres to the nav_core::BaseGlobalPlanner interface specified in<a href="http://wiki.ros.org/nav_core">nav_core</a>.</description><author>Kurt Konolige</author><author>Eitan Marder-Eppstein</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/navfn</url><buildtool_depend version_gte="0.5.68">catkin</buildtool_depend><build_depend>cmake_modules</build_depend><build_depend>costmap_2d</build_depend><build_depend>geometry_msgs</build_depend><build_depend>nav_core</build_depend><build_depend>nav_msgs</build_depend><build_depend>netpbm</build_depend><build_depend>pcl_conversions</build_depend><build_depend>pcl_ros</build_depend><build_depend>pluginlib</build_depend><build_depend>rosconsole</build_depend><build_depend>roscpp</build_depend><build_depend>tf</build_depend><build_depend>visualization_msgs</build_depend><run_depend>costmap_2d</run_depend><run_depend>geometry_msgs</run_depend><run_depend>nav_core</run_depend><run_depend>nav_msgs</run_depend><run_depend>pcl_conversions</run_depend><run_depend>pcl_ros</run_depend><run_depend>pluginlib</run_depend><run_depend>rosconsole</run_depend><run_depend>roscpp</run_depend><run_depend>tf</run_depend><run_depend>visualization_msgs</run_depend><export><nav_core plugin="${prefix}/bgp_plugin.xml"/></export></package>']
    navigation: [navigation, '<?xml version="1.0" encoding="utf-8"?><package><name>navigation</name><version>1.11.11</version><description>A 2D navigation stack that takes in information from odometry, sensor streams, and a goal pose and outputs safe velocity commands that are sent to a mobile base.</description><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><author>contradict@gmail.com</author><author>Eitan Marder-Eppstein</author><license>BSD,LGPL,LGPL (amcl)</license><url>http://wiki.ros.org/navigation</url><buildtool_depend>catkin</buildtool_depend><run_depend>amcl</run_depend><run_depend>carrot_planner</run_depend><run_depend>dwa_local_planner</run_depend><run_depend>move_base</run_depend><run_depend>nav_core</run_depend><run_depend>robot_pose_ekf</run_depend><run_depend>base_local_planner</run_depend><run_depend>clear_costmap_recovery</run_depend><run_depend>fake_localization</run_depend><run_depend>move_base_msgs</run_depend><run_depend>navfn</run_depend><run_depend>rotate_recovery</run_depend><run_depend>costmap_2d</run_depend><run_depend>map_server</run_depend><run_depend>move_slow_and_clear</run_depend><run_depend>voxel_grid</run_depend><export><metapackage/></export></package>']
    robot_pose_ekf: [robot_pose_ekf, '<?xml version="1.0" encoding="utf-8"?><package><name>robot_pose_ekf</name><version>1.11.11</version><description>The Robot Pose EKF package is used to estimate the 3D pose of a robot, based on (partial) pose measurements coming from different sources. It uses an extended Kalman filter with a 6D model (3D position and 3D orientation) to combine measurements from wheel odometry, IMU sensor and visual odometry. The basic idea is to offer loosely coupled integration with different sensors, where sensor signals are received as ROS messages.</description><author>Wim Meeussen</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/robot_pose_ekf</url><buildtool_depend version_gte="0.5.68">catkin</buildtool_depend><build_depend>roscpp</build_depend><build_depend>rostest</build_depend><build_depend>bfl</build_depend><build_depend>std_msgs</build_depend><build_depend>geometry_msgs</build_depend><build_depend>sensor_msgs</build_depend><build_depend>nav_msgs</build_depend><build_depend>tf</build_depend><run_depend>roscpp</run_depend><run_depend>rostest</run_depend><run_depend>bfl</run_depend><run_depend>std_msgs</run_depend><run_depend>geometry_msgs</run_depend><run_depend>sensor_msgs</run_depend><run_depend>nav_msgs</run_depend><run_depend>tf</run_depend><test_depend>rosbag</test_depend></package>']
    rotate_recovery: [rotate_recovery, '<?xml version="1.0" encoding="utf-8"?><package><name>rotate_recovery</name><version>1.11.11</version><description>This package provides a recovery behavior for the navigation stack that attempts to clear space by performing a 360 degree rotation of the robot.</description><author>Eitan Marder-Eppstein</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/rotate_recovery</url><buildtool_depend>catkin</buildtool_depend><build_depend>cmake_modules</build_depend><build_depend>roscpp</build_depend><build_depend>tf</build_depend><build_depend>costmap_2d</build_depend><build_depend>nav_core</build_depend><build_depend>pluginlib</build_depend><build_depend>eigen</build_depend><build_depend>base_local_planner</build_depend><run_depend>roscpp</run_depend><run_depend>tf</run_depend><run_depend>costmap_2d</run_depend><run_depend>nav_core</run_depend><run_depend>pluginlib</run_depend><run_depend>eigen</run_depend><export><nav_core plugin="${prefix}/rotate_plugin.xml"/></export></package>']
    voxel_grid: [voxel_grid, '<?xml version="1.0" encoding="utf-8"?><package><name>voxel_grid</name><version>1.11.11</version><description>voxel_grid provides an implementation of an efficient 3D voxel grid. The occupancy grid can support 3 different representations for the state of a cell: marked, free, or unknown. Due to the underlying implementation relying on bitwise and and or integer operations, the voxel grid only supports 16 different levels per voxel column. However, this limitation yields raytracing and cell marking performance in the grid comparable to standard 2D structures making it quite fast compared to most 3D structures.</description><author>Eitan Marder-Eppstein, Eric Berger</author><author>contradict@gmail.com</author><maintainer email="davidvlu@gmail.com">David V. Lu!!</maintainer><maintainer email="fergs@unboundedrobotics.com">Michael Ferguson</maintainer><license>BSD</license><url>http://wiki.ros.org/voxel_grid</url><buildtool_depend version_gte="0.5.68">catkin</buildtool_depend><build_depend>roscpp</build_depend><run_depend>roscpp</run_depend></package>']
  rgbd:
    _ref: a9aacb5b8cb3bc0c09b7cdcce7471080e98a0e48
    rgbd: ['', '<?xml version="1.0" encoding="utf-8"?><package><name>rgbd</name><version>0.0.0</version><description>The rgbd package</description><maintainer email="S.v.d.Dries@tue.nl">Sjoerd van den Dries</maintainer><license>TODO</license><buildtool_depend>catkin</buildtool_depend><build_depend>cv_bridge</build_depend><build_depend>geolib2</build_depend><build_depend>image_geometry</build_depend><build_depend>message_filters</build_depend><build_depend>pcl_conversions</build_depend><build_depend>pcl_ros</build_depend><build_depend>roscpp</build_depend><build_depend>tue_serialization</build_depend><build_depend>message_generation</build_depend><run_depend>cv_bridge</run_depend><run_depend>geolib2</run_depend><run_depend>image_geometry</run_depend><run_depend>message_filters</run_depend><run_depend>pcl_conversions</run_depend><run_depend>pcl_ros</run_depend><run_depend>roscpp</run_depend><run_depend>tue_serialization</run_depend><run_depend>message_runtime</run_depend></package>']
  tue_config:
    _ref: fd64e5e126a698a9a851f1493c6fccb8d731e66f
    tue_config: ['', '<?xml version="1.0" encoding="utf-8"?><package><name>tue_config</name><version>0.0.0</version><description>The tue_config package</description><maintainer email="S.v.d.Dries@tue.nl">Sjoerd van den Dries</maintainer><license>BSD</license><buildtool_depend>catkin</buildtool_depend><build_depend>tue_filesystem</build_depend><build_depend>yaml-cpp</build_depend><build_depend>roslib</build_depend><run_depend>tue_filesystem</run_depend><run_depend>yaml-cpp</run_depend><run_depend>roslib</run_depend></package>']
type: cache
version: 2
